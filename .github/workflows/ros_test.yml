# This is a basic workflow to help you get started with Actions

name: ROS Test Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push
  push:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            python-version: 3.8
            ros-distro: noetic

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE/test_ws/src/<REPO_NAME>, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: test_ws/src/${{ github.event.repository.name }}
      # Sets up ROS with QCR specific repos
      - name: Setup ROS ${{ matrix.ros-distro }}
        uses: qcr/setup-ros@master
        with:
          required-ros-distributions: ${{ matrix.ros-distro }}
      # Install required dependencies for package
      - name: ROSDep Update and Install Dependencies
        run: |
          source /opt/ros/${{ matrix.ros-distro }}/setup.bash && rosdep update
          source /opt/ros/${{ matrix.ros-distro }}/setup.bash && rosdep install --from-paths . --ignore-src -r -y
      # Uses the following third-party action to setup a catkin workspace
      - name: Setup Catkin Workspace
        uses: betwo/github-setup-catkin@v1.3.0
        with:
          ros-version: ${{ matrix.ros-distro }}
          workspace: '$GITHUB_WORKSPACE'
      # Enter the workspace, build and run unittests as a rostest
      - name: Build and Run Tests 
        run: |
          cd test_ws && catkin_make run_tests
          source devel/setup.bash
          rostest ${{ github.event.repository.name }} unittests.test